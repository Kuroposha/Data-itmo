#однострочный комментарий
'''
mnostrochnij
kommentarii
'''
"""
on
je
"""

"""
1. как объявить переменную?

переменная - поименованная облость оперативной памяти, в которую можно записать значение и извлечь его оттуда


"""
a = 1
print(a)

""" Идентификаторы - имена.
1. нельзя начинать имя с цифры
2. латиница
3. знак подчеркивания
4. цифры
PEP-8 - обязательно еще раз прочитать
питон регистрозависимый интерпритируемый


2. какие типы данных существуют в Python?

язык с динамической типизацией. во время создания сразу присвается тип.
свойства типов данных
1) кол-во оперативной памяти
2) диапозон допуст значений
3) допустимые операции
4) формат представления данных (отображения)

а. скалярные (простые) типы
могут содержать только одно значение
- целые числа - int #
- дробные числа - float
- complex - комплексные числа
- булевые - bool
- строки - str
- bytes - байтовые строки
"""

i1 = 10
i2 = 0b100 # Двоичная СС
i3 = 0o777 # Восьмиричная СС
i4 = 0x2F # Шестнадцатиричная СС

f1 = 1.23
f2 = 1e6#(2 000 000)
f3 = 123e-3 #(0.123)

c1 = 3.14j #(используется в обработке сигналов)

b1 = True
b2 = False

s1 = 'Hello'
s2 = "Python"
s3 = "Hel'o"
s4 = 'Pyt"on'
s5 = "Hello\'\\"
s6 = '''
Python
Hello
			ghgghg
				fsfje
				'''
s7 = """
	Многострочный текст
"""

#юникод и обратносовместимый код

s8 = u"Текст"#Python2
s9 = "^\d+$" #регулярное выражение
s10 = r"^\d+$" #raw string сырая строка

bs1 = b"Hello" #набор байтов без кода нельзя смешивать с юникодными строками

"""
б. Структурные типы (сложные, составные)
Могут хранить много значений, разных (скалярных и структурных)
- tuple - картежи
- dict - словарь
- set - множества
- list - списки
- object- объекты

в. Специальные типы : None (отсутствие значения)

Создание переменной делится на два этапа
декларация
иниализациация
"""

abc = None


#- tuple - картежи индексация начинается с нуля
t = (1, 1.2, True, "str", (1, 2, 3))
print(t[2]) #=>True
#ничего в кортеже менять нельзя. лебядь рак и щука вместе навсегда

l = [1, 1.222, (45, 46), 'Kl', []]
#список полностью редактируем
l1 = [range (10, 20, 2)] # отрицательный шаг может быть

#разница между кортежем и списком - кортеж - это карточка товара, список - это список товаров
s = {1, 2, 2, 3, 4}
s2 = set ()

# все значения в множестве уникальны. нельзя вностить изменяемые типы данных. данные выводятся упорядоченно. пустое множество

d = {} #пустой словарь
d2 = {
	'key1': 1,
	'key2': {1, 2, 3}
}
#все ключи уникальны почитай про словари поподробнее
"""
Еще два деления :
a) Изменяемые типы данных: все структурные типы, за искл кортежа
b) Неизменяемые типы данных: все простые типы и кортеж
"""
a = [1, 2, 3]
b = a
b[0] = 666

"""
Получится a = [666, 2, 3] b = [666, 2, 3]
"""


# Как определить тип переменной
print(type(d))

#Как выполнить явное приведение типов?

print(type(int('666')))#Конструкторы
a12 = '789.5'
print(type(float(a12))

print(list({'k': 1, 'k2': 2}))
#Функции конструкции int
# игра с системами счисления
int('10101', 2) #21
bin(4) #0b100
oct(8)#0o10
hex(255)#0xff
hex(0o10)#
#ДЗ создать конвектор СС
"""
Какие операторы существуют в ПАЙТОН
- присваивание: =,
- присваивания с операцией: += -= *= /= %= //= **=;
- математические: + - * / % // **;
- сравнения: > < >= <= == != <>
- логические: and or not
- побитовые:  & | ~ ^ << >>
- принадлежности: in  not in
- тождественности: is  not is
- скобки

логические и побитовые делятся на бинарные и унарные
Тернарный оператор
<истина> if <условие> else <ложь>
"""
a = 0
a += 1 #a + 1
